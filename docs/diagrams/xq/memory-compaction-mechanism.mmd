graph TB
    subgraph "XQ内存紧凑化机制详解"
        direction TB
        
        subgraph "TXQ即时紧凑化系统"
            direction TB
            
            subgraph "紧凑化触发"
                TXQ_TRIGGER["触发条件：<br/>• txq_freeData调用<br/>• 作业有关联数据<br/>• off != TXOFF_NIL"]
            end
            
            subgraph "紧凑化过程"
                TXQ_STEP1["步骤1：计算影响范围<br/>• freeOff = j->off<br/>• freeLen = j->len<br/>• freeEnd = freeOff + freeLen"]
                
                TXQ_STEP2["步骤2：更新偏移量<br/>• 遍历所有作业<br/>• 调整后续作业偏移<br/>• fixjob->off -= freeLen"]
                
                TXQ_STEP3["步骤3：数据移动<br/>• 计算移动范围<br/>• memcpy向前移动<br/>• 填补数据空洞"]
                
                TXQ_STEP4["步骤4：更新状态<br/>• txdataInUse -= freeLen<br/>• j->off = TXOFF_NIL<br/>• j->len = 0"]
            end
            
            TXQ_TRIGGER --> TXQ_STEP1
            TXQ_STEP1 --> TXQ_STEP2
            TXQ_STEP2 --> TXQ_STEP3
            TXQ_STEP3 --> TXQ_STEP4
        end
        
        subgraph "RXQ智能压缩系统"
            direction TB
            
            subgraph "作业数组压缩"
                RXQ_JOB_TRIGGER["触发条件：<br/>• next >= MAX_RXJOBS<br/>• first != 0<br/>• 有回收空间"]
                
                RXQ_JOB_PROCESS["压缩过程：<br/>• memmove作业到开头<br/>• 调整first=0<br/>• 调整next-=原first<br/>• 回收前部空间"]
            end
            
            subgraph "数据缓冲区压缩"
                RXQ_DATA_TRIGGER["触发条件：<br/>• 数据空间不足<br/>• jobs[first].off != 0<br/>• 可回收前部空间"]
                
                RXQ_DATA_PROCESS["压缩过程：<br/>• 计算有效数据范围<br/>• memmove数据到开头<br/>• 批量调整作业偏移<br/>• 回收前部空间"]
            end
            
            subgraph "删除操作压缩"
                RXQ_DROP_TRIGGER["触发条件：<br/>• rxq_dropJob调用<br/>• 删除中间作业<br/>• 需要填补空洞"]
                
                RXQ_DROP_PROCESS["压缩过程：<br/>• 移动后续数据<br/>• 移动后续作业<br/>• 调整所有偏移<br/>• 减少队列长度"]
            end
            
            RXQ_JOB_TRIGGER --> RXQ_JOB_PROCESS
            RXQ_DATA_TRIGGER --> RXQ_DATA_PROCESS
            RXQ_DROP_TRIGGER --> RXQ_DROP_PROCESS
        end
        
        subgraph "内存布局变化示例"
            direction LR
            
            subgraph "TXQ压缩前后"
                TXQ_BEFORE["压缩前：<br/>[数据A][数据B][数据C]<br/>删除数据B"]
                TXQ_AFTER["压缩后：<br/>[数据A][数据C][----空闲----]<br/>偏移量同步调整"]
                TXQ_BEFORE --> TXQ_AFTER
            end
            
            subgraph "RXQ压缩前后"
                RXQ_BEFORE["压缩前：<br/>[空闲][数据1][数据2][数据3]<br/>前部空间浪费"]
                RXQ_AFTER["压缩后：<br/>[数据1][数据2][数据3][空闲]<br/>连续可用空间"]
                RXQ_BEFORE --> RXQ_AFTER
            end
        end
        
        subgraph "压缩算法特点"
            direction TB
            
            FEATURES["算法特点：<br/>• O(n)时间复杂度<br/>• 就地压缩操作<br/>• 零碎片保证<br/>• 偏移量一致性<br/>• 内存使用最优化"]
            
            BENEFITS["性能优势：<br/>• 即时空间回收<br/>• 预防内存碎片<br/>• 提高缓存局部性<br/>• 减少内存占用<br/>• 支持连续分配"]
        end
        
        subgraph "压缩策略对比"
            direction LR
            
            TXQ_STRATEGY["TXQ策略：<br/>• 即时压缩<br/>• 删除时触发<br/>• 全局偏移调整<br/>• 适合随机删除"]
            
            RXQ_STRATEGY["RXQ策略：<br/>• 按需压缩<br/>• 空间不足时触发<br/>• 批量数据移动<br/>• 适合顺序消费"]
        end
    end
    
    %% 连接关系
    TXQ_STEP4 --> FEATURES
    RXQ_JOB_PROCESS --> FEATURES
    RXQ_DATA_PROCESS --> FEATURES
    RXQ_DROP_PROCESS --> FEATURES
    
    FEATURES --> BENEFITS
    
    %% 样式定义
    classDef txqStyle fill:#e1f5fe,stroke:#01579b,stroke-width:2px
    classDef rxqStyle fill:#f3e5f5,stroke:#4a148c,stroke-width:2px
    classDef processStyle fill:#e8f5e8,stroke:#2e7d32,stroke-width:2px
    classDef exampleStyle fill:#fff3e0,stroke:#e65100,stroke-width:2px
    classDef featureStyle fill:#e0f2f1,stroke:#00695c,stroke-width:2px
    
    class TXQ_TRIGGER,TXQ_STEP1,TXQ_STEP2,TXQ_STEP3,TXQ_STEP4,TXQ_BEFORE,TXQ_AFTER,TXQ_STRATEGY txqStyle
    class RXQ_JOB_TRIGGER,RXQ_JOB_PROCESS,RXQ_DATA_TRIGGER,RXQ_DATA_PROCESS,RXQ_DROP_TRIGGER,RXQ_DROP_PROCESS,RXQ_BEFORE,RXQ_AFTER,RXQ_STRATEGY rxqStyle
    class FEATURES,BENEFITS featureStyle 